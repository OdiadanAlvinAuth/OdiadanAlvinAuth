<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Todo List</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #dfd3d3;
      margin: 0;
      padding: 20px;
    }

    .Alvin {
      max-width: 400px;
      margin: 0 auto;
      background: white;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      border: 20px solid #978f8fcc ;
    }

    h1 {
      margin-bottom: 20px;
      text-align: center;
    }

    .DND {
      display: flex;
      gap: 10px;
      margin-bottom: 20px;
    }

    .DND input {
      flex: 1;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
    }

    .DND button {
      padding: 10px;
      background-color: #000;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
    }

    .DND button:hover {
      background-color: #333;
    }

    

    .todo-list {
      list-style: none;
      padding: 0;
      margin: 0;
    }

    .todo-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      margin-bottom: 10px;
    }

    .todo-item.completed .todo-text {
      text-decoration: line-through;
      color: #888;
    }

    .todo-item button {
      background: none;
      border: none;
      color: red;
      cursor: pointer;
    }

    .todo-filters {
      display: flex;
      justify-content: space-between;
      margin-bottom: 20px;
    }

    .todo-filters button {
      flex: 1;
      padding: 10px;
      border: 1px solid #ddd;
      border-radius: 4px;
      cursor: pointer;
      background-color: white;
    }

    .todo-filters button.active {
      background-color: #000;
      color: white;
    }

  </style>
</head>
<body>
  <div class="Alvin">
    <h3>Todo List By Dan Odia(402418078)</h3>
    <div class="todo-filters">
      <button id="filter-all" class="active">All</button>
      <button id="filter-active">Active</button>
      <button id="filter-completed">Completed</button>
    </div>
    <div class="DND">
      <input type="text" id="new-todo" placeholder="Add a new todo..." />
      <button id="add-todo">+ Add</button>
    </div>
    
    <ul id="todo-list"></ul>
  </div>

  <script>
    let todos = [];

    const todoList = document.getElementById('todo-list');
    const newTodoInput = document.getElementById('new-todo');
    const addTodoButton = document.getElementById('add-todo');
    const filterButtons = document.querySelectorAll('.todo-filters button');

    function saveTodos() {
      localStorage.setItem('todos', JSON.stringify(todos));
    }

    function loadTodos() {
      const stored = localStorage.getItem('todos');
      if (stored) {
        todos = JSON.parse(stored);
        renderTodos();
      } else {
        fetch('https://jsonplaceholder.typicode.com/todos?_limit=10')
          .then(res => res.json())
          .then(fetchedTodos => {
            todos = fetchedTodos.map(todo => ({
              text: todo.title,
              completed: todo.completed
            }));
            saveTodos();
            renderTodos();
          })
          .catch(error => {
            console.error('Failed to fetch todos:', error);
            todoList.innerHTML = '<li>Failed to load todos.</li>';
          });
      }
    }

function renderTodos(filter = 'all') {
    todoList.innerHTML = '';
    const filtered = todos.filter(todo => {
      if (filter === 'active') return !todo.completed;
      if (filter === 'completed') return todo.completed;
      return true;
    });
  
    filtered.forEach((todo, index) => {
      const li = document.createElement('li');
      li.className = `todo-item ${todo.completed ? 'completed' : ''}`;
  
      const checkbox = document.createElement('input');
      checkbox.type = 'checkbox';
      checkbox.checked = todo.completed;
      checkbox.addEventListener('change', () => toggleTodoCompleted(index));
  
      const span = document.createElement('span');
      span.className = 'todo-text';
      span.textContent = todo.text;
      span.style.marginLeft = '10px';
      span.addEventListener('click', () => toggleTodoCompleted(index));
  
      const deleteButton = document.createElement('button');
      deleteButton.textContent = 'ðŸ—‘';
      deleteButton.addEventListener('click', () => deleteTodo(index));
  
      li.appendChild(checkbox);
      li.appendChild(span);
      li.appendChild(deleteButton);
      todoList.appendChild(li);
    });
  }
    function addTodo() {
      const text = newTodoInput.value.trim();
      if (text) {
        todos.push({ text, completed: false });
        newTodoInput.value = '';
        saveTodos();
        renderTodos();
      }
    }

    function deleteTodo(index) {
      todos.splice(index, 1);
      saveTodos();
      renderTodos();
    }

    function toggleTodoCompleted(index) {
      todos[index].completed = !todos[index].completed;
      saveTodos();
      renderTodos();
    }

    document.addEventListener('DOMContentLoaded', () => {
      addTodoButton.addEventListener('click', addTodo);
      newTodoInput.addEventListener('keypress', e => {
        if (e.key === 'Enter') addTodo();
      });

      filterButtons.forEach(button => {
        button.addEventListener('click', () => {
          filterButtons.forEach(btn => btn.classList.remove('active'));
          button.classList.add('active');
          const filter = button.id.replace('filter-', '');
          renderTodos(filter);
        });
      });

      loadTodos();
    });
  </script>
</body>
</html>
