{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "49d63f25",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "number= int(input(\"Enter number\"))\n",
    "if number>0:\n",
    "       print(\"The number is postive\")\n",
    "elif number<0:\n",
    "        print(\"Number is a negative\")\n",
    "else:\n",
    "        print(\"Number is  Zero\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "642a74bd",
   "metadata": {},
   "outputs": [],
   "source": [
    "age=int(input(\"Enter age\"))\n",
    "if age<=13:\n",
    "    print(\"You are a child\")\n",
    "elif age<=20:\n",
    "    print(\"You are a teenager\")\n",
    "elif age<=59:\n",
    "    print(\"You are an adult\")\n",
    "else:\n",
    "    print(\"you are a senior\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f321993e",
   "metadata": {},
   "outputs": [],
   "source": [
    "mark= int(input(\"enter your mark\"))\n",
    "if mark<=29:\n",
    "    print(\"Not achieved:Fail\")\n",
    "elif mark<=39:\n",
    "    print(\"Elementary achievement\")  \n",
    "elif mark<=49:\n",
    "    print(\"Adequate achievement\")\n",
    "elif mark<=59:\n",
    "    print(\"Moderate achiement\")\n",
    "elif mark<=69:\n",
    "    print(\"Sustantial achivement\")\n",
    "elif mark<=79:\n",
    "    print(\"Meritorious achievemnt\")    \n",
    "elif mark<=800:\n",
    "    print(\"Outstanding achievement \") "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "56467d22",
   "metadata": {},
   "outputs": [],
   "source": [
    "temp=int(input(\"Enter temprature in Fahrnheight\"))\n",
    "answer=(1.8*temp)-32    \n",
    "if answer>35:\n",
    "      print(\"Very Hot\")\n",
    "elif answer>34:\n",
    "      print(\"Hot\")\n",
    "elif answer<25:\n",
    "      print(\"Warm\")\n",
    "elif answer>15:\n",
    "      print(\"Cold\")\n",
    "      \n",
    "      "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "82e6bb3a",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "number= int(input(\"Enter number\"))\n",
    "if number>0:\n",
    "       print(\"The number is postive\")\n",
    "elif number<0:\n",
    "        print(\"Number is a negative\")\n",
    "else:\n",
    "        print(\"Number is  Zero\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3904d968",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}

class Vehicle:
    def __init__(self, name):
        self.name = name
    
    def start(self):
        print(self.name + " is starting")

class Car(Vehicle):
    def start(self):
        print(self.name + " is starting with a vroom!")

class Bicycle(Vehicle):
    def start(self):
        print(self.name + " is ready to pedal!")

# Example usage
vehicle = Vehicle("Generic Vehicle")
car = Car("Toyota Camry")
bicycle = Bicycle("Mountain Bike")

vehicle.start()
car.start()
bicycle.start()
