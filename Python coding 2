{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1dd05171",
   "metadata": {},
   "outputs": [],
   "source": [
    "total = 0\n",
    "numbers=int(input(\"Enter number (-1to stop):\"))\n",
    "while number!= -1:\n",
    "    total += numbers\n",
    "    numbers=int(input(\"Enter number (-1to stop):\"))\n",
    "print(\"The sum is \",total)\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "98c3aa3c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<function __main__.count_vowels(input_dtring)>"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def count_vowels(input_dtring):\n",
    "    count=0\n",
    "    vowels=\"a,e,i,o,u\"\n",
    "    for char in input_dtring:\n",
    "        if char.lower() in vowels:\n",
    "            count +=1\n",
    "            return count\n",
    "\n",
    "count_vowels"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "712e826a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Welcome to lucky draw\n",
      "Enter your lucky number 5\n",
      "try again \n",
      "Enter your lucky number 3\n",
      "try again \n",
      "Enter your lucky number 7\n",
      "try again \n",
      "Enter your lucky number 8\n",
      "try again \n",
      "Your Lucky number was 4\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "def luck_draw():\n",
    "    print(\"Welcome to lucky draw\")\n",
    "    lucknumber=random.randint(1,10)\n",
    "    attempts=4\n",
    "    while attempts>0:\n",
    "        answer=int(input(\"Enter your lucky number \"))\n",
    "        if answer==lucknumber:\n",
    "            print(\"Congadulations you won\")\n",
    "        else:\n",
    "            print(\"try again \")\n",
    "            attempts-=1\n",
    "    else:\n",
    "        print(\"Your Lucky number was\",lucknumber)\n",
    "luck_draw()           "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "05b5397d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "*\n",
      "**\n",
      "***\n",
      "****\n",
      "*****\n",
      "******\n"
     ]
    }
   ],
   "source": [
    "row = 5\n",
    "for i in range(1,row+2,1):\n",
    "    for j in range(1, i+1):\n",
    "        print(\"*\", end=\"\")\n",
    "    print()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "7ab6e0f3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "* * * * * \n",
      "* * * * \n",
      "* * * \n",
      "* * \n",
      "* \n"
     ]
    }
   ],
   "source": [
    "rows = 5\n",
    "b = 0\n",
    "for i in range(rows, 0, -1):\n",
    "    b += 1\n",
    "    for j in range(1, i + 1):\n",
    "        print(\"*\", end=' ')\n",
    "    print('')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "6eb3f857",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "a\n",
      "i\n",
      "a\n",
      "c\n",
      "i\n",
      "m\n"
     ]
    }
   ],
   "source": [
    "name = \"micaiah\"\n",
    "for i in range(5, -1,-1):\n",
    "    print(name[i])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "5982c0ae",
   "metadata": {},
   "outputs": [],
   "source": [
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "946b3609",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.13"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
